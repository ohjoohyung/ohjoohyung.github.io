{"componentChunkName":"component---src-templates-post-tsx","path":"/woowa-redis/","result":{"data":{"markdownRemark":{"html":"<h3 id=\"cache-구조\" style=\"position:relative;\"><a href=\"#cache-%EA%B5%AC%EC%A1%B0\" aria-label=\"cache 구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache 구조</h3>\n<h3 id=\"1---look-aside-cache\" style=\"position:relative;\"><a href=\"#1---look-aside-cache\" aria-label=\"1   look aside cache permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>#1 - Look aside Cache</h3>\n<h3 id=\"2---write-back\" style=\"position:relative;\"><a href=\"#2---write-back\" aria-label=\"2   write back permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>#2 - Write Back</h3>\n<p>Redis는 Collection을 제공</p>\n<h2 id=\"왜-collection이-중요한가\" style=\"position:relative;\"><a href=\"#%EC%99%9C-collection%EC%9D%B4-%EC%A4%91%EC%9A%94%ED%95%9C%EA%B0%80\" aria-label=\"왜 collection이 중요한가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>왜 Collection이 중요한가?</h2>\n<h3 id=\"개발의-편의성\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EB%B0%9C%EC%9D%98-%ED%8E%B8%EC%9D%98%EC%84%B1\" aria-label=\"개발의 편의성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개발의 편의성</h3>\n<p>랭킹 서버를 직접 구현한다면?</p>\n<ul>\n<li>\n<p>가장 간단한 방법</p>\n<ul>\n<li>DB에 유저의 Score를 저장 order by로 정렬 후 읽어오기</li>\n<li>\n<p>개수가 많아지면 속도에 문제가 발생</p>\n<ul>\n<li>디스크를 사용하므로</li>\n</ul>\n</li>\n<li>\n<p>Redis의 Sorted Set을 이용하면, 랭킹을 구현할 수 있음</p>\n<ul>\n<li>replication도 가능</li>\n<li>단, 종속적</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"개발의-난이도\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EB%B0%9C%EC%9D%98-%EB%82%9C%EC%9D%B4%EB%8F%84\" aria-label=\"개발의 난이도 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개발의 난이도</h3>\n<ul>\n<li>친구 리스트를 key value 형태로 저장해야 한다면?</li>\n<li>\n<p>어떤 문제가 발생할 수 있을까?</p>\n<ul>\n<li>Race Condition</li>\n<li>Redis의 경우는 자료구조가 Atomic하기 때문에, 해당 Race Condition을 피할 수 있다.</li>\n</ul>\n</li>\n<li>외부의 Collection을 잘 이용하는 것으로, 여러가지 개발 시간을 단축시키고, 문제를 줄여줄 수 있다.</li>\n</ul>\n<h2 id=\"redis-사용-처\" style=\"position:relative;\"><a href=\"#redis-%EC%82%AC%EC%9A%A9-%EC%B2%98\" aria-label=\"redis 사용 처 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Redis 사용 처</h2>\n<ul>\n<li>\n<p>Remote Data Store</p>\n<ul>\n<li>A,B,C 서버에서 데이터를 공유하고 싶을 때</li>\n</ul>\n</li>\n<li>\n<p>한대에서만 필요하다면, 전역 변수를 쓰면 되지 않을까?</p>\n<ul>\n<li>Redis 자체가 Atomic을 보장해준다. (싱글 스레드라)</li>\n</ul>\n</li>\n<li>\n<p>주로 많이 쓰는 곳들</p>\n<ul>\n<li>인증 토큰 등을 저장(Strings 또는 hash)</li>\n<li>Ranking 보드로 사용(Sorted Set)</li>\n<li>유저 API Limit</li>\n<li>잡 큐(list)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"redis-collections\" style=\"position:relative;\"><a href=\"#redis-collections\" aria-label=\"redis collections permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Redis Collections</h2>\n<ul>\n<li>\n<p>Strings</p>\n<ul>\n<li>단일 Key</li>\n<li>간단한 sql을 대체한다면?</li>\n</ul>\n</li>\n<li>\n<p>List</p>\n<ul>\n<li>\n<p>insert</p>\n<ul>\n<li>LPUSH, RPUSH</li>\n</ul>\n</li>\n<li>\n<p>pop</p>\n<ul>\n<li>LPOP, RPOP</li>\n</ul>\n</li>\n<li>lpop, blpop, rpop, brpop</li>\n</ul>\n</li>\n<li>\n<p>Set</p>\n<ul>\n<li>\n<p>데이터가 있는지 없는지만 체크하는 용도</p>\n<ul>\n<li>특정 유저를 follow하는 목록</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Sorted Sets</p>\n<ul>\n<li>\n<p>랭킹에 따라서 순서가 바뀌길 바란다면</p>\n<ul>\n<li>Sorted Sets의 score는 double 타입이기 때문에, 값이 정확하지 않을 수 있다</li>\n</ul>\n</li>\n<li>정렬이 필요한 값이 필요하다면?</li>\n<li>Score 기준으로 뽑고 싶다면?</li>\n</ul>\n</li>\n<li>\n<p>Hash</p>\n<ul>\n<li>key 밑에 sub key가 존재</li>\n<li>간단한 sql을 대체한다면?</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"collection-주의-사항\" style=\"position:relative;\"><a href=\"#collection-%EC%A3%BC%EC%9D%98-%EC%82%AC%ED%95%AD\" aria-label=\"collection 주의 사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Collection 주의 사항</h2>\n<ul>\n<li>\n<p>하나의 컬렉션에 너무 많은 아이템을 담으면 좋지 않음</p>\n<ul>\n<li>10000개 이하 몇천개 수준으로 유지하는게 좋음</li>\n</ul>\n</li>\n<li>\n<p>Expire는 Collection의 item 개별로 걸리지 않고 전체 Collection에 대해서만 걸림</p>\n<ul>\n<li>즉 해당 10000개 아이템 가진 Collection에 expire가 걸려있다면 그 시간 후에 10000개의 아이템 모두 삭제</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"redis-운영\" style=\"position:relative;\"><a href=\"#redis-%EC%9A%B4%EC%98%81\" aria-label=\"redis 운영 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Redis 운영</h2>\n<ul>\n<li>메모리 관리를 잘하자</li>\n<li>O(N) 관련 명령어는 주의하자.</li>\n<li>Replication</li>\n</ul>\n<h2 id=\"메모리-관리\" style=\"position:relative;\"><a href=\"#%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B4%80%EB%A6%AC\" aria-label=\"메모리 관리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>메모리 관리</h2>\n<ul>\n<li>Redis는 In-Memory Data Store</li>\n<li>\n<p>Physical Memory 이상을 사용하면 문제가 발생</p>\n<ul>\n<li>swap이 있다면 swap 사용으로 해당 메모리 page 접근시마다 늦어짐</li>\n<li>swap이 없다면?</li>\n</ul>\n</li>\n<li>\n<p>Maxmemory를 설정하더라도 이보다 더 사용할 가능성이 큼.</p>\n<ul>\n<li>redis는 자신이 사용하는 메모리를 정확하게 알 수가 없다</li>\n</ul>\n</li>\n<li>RSS 값을 모니터링 해야함</li>\n<li>많은 업체가 현재 메모리를 사용해서 swap을 쓰고 있다는 것을 모를 때가 많음.</li>\n<li>\n<p>큰 메모리를 사용하는 instance 하나보다는 적은 메모리를 사용하는 instance 여러 개가 안전함</p>\n<ul>\n<li>관리하기 귀찮지만 운영의 안전성이 높아짐</li>\n</ul>\n</li>\n<li>Redis는 메모리 파편화가 발생할 수 있음. 4.x대부터 메모리 파편화를 줄이도록 jemalloc에 힌트를 주는 기능이 들어갔으나, jemalloc 버전에 따라서 다르게 동작할 수 있음.</li>\n<li>\n<p>3.x대 버전의 경우</p>\n<ul>\n<li>실제 used memory는 2gb로 보고되지만 11gm의 rss를 사용하는 경우가 자주 발생</li>\n</ul>\n</li>\n<li>다양한 사이즈를 가지는 데이터보다는 유사한 크기의 데이터를 가지는 경우가 유리</li>\n</ul>\n<h2 id=\"메모리가-부족할-때는\" style=\"position:relative;\"><a href=\"#%EB%A9%94%EB%AA%A8%EB%A6%AC%EA%B0%80-%EB%B6%80%EC%A1%B1%ED%95%A0-%EB%95%8C%EB%8A%94\" aria-label=\"메모리가 부족할 때는 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>메모리가 부족할 때는?</h2>\n<ul>\n<li>\n<p>Cache is Cash</p>\n<ul>\n<li>좀 더 메모리 많은 장비로 마이그레이션</li>\n<li>메모리 빡빡하면 마이그레이션 중에 문제가 발생할 수도</li>\n</ul>\n</li>\n<li>있는 데이터 줄이기</li>\n</ul>\n<h2 id=\"메모리를-줄이기-위한-설정\" style=\"position:relative;\"><a href=\"#%EB%A9%94%EB%AA%A8%EB%A6%AC%EB%A5%BC-%EC%A4%84%EC%9D%B4%EA%B8%B0-%EC%9C%84%ED%95%9C-%EC%84%A4%EC%A0%95\" aria-label=\"메모리를 줄이기 위한 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>메모리를 줄이기 위한 설정</h2>\n<ul>\n<li>\n<p>기본적으로 Collection들은 다음과 같은 자료구조를 사용</p>\n<ul>\n<li>Hash → HashTable을 하나 더 사용</li>\n<li>Sorted Set → Skiplist와 HashTable을 이용</li>\n<li>Set → HashTable 사용</li>\n<li>해당 자료구조들은 메모리를 많이 사용함</li>\n</ul>\n</li>\n<li>Ziplist를 이용하자</li>\n</ul>\n<h2 id=\"ziplist-구조\" style=\"position:relative;\"><a href=\"#ziplist-%EA%B5%AC%EC%A1%B0\" aria-label=\"ziplist 구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ziplist 구조</h2>\n<ul>\n<li>In-Memory 특성 상, 적은 개수라면 선형 탐색을 하더라도 빠르다.</li>\n<li>List, hash, sorted set 등을 ziplist로 대체해서 처리를 하는 설정이 존재</li>\n</ul>\n<h2 id=\"on-관련-명령어는-주의하자\" style=\"position:relative;\"><a href=\"#on-%EA%B4%80%EB%A0%A8-%EB%AA%85%EB%A0%B9%EC%96%B4%EB%8A%94-%EC%A3%BC%EC%9D%98%ED%95%98%EC%9E%90\" aria-label=\"on 관련 명령어는 주의하자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>O(N) 관련 명령어는 주의하자</h2>\n<ul>\n<li>\n<p>Redis는 Single Threaded</p>\n<ul>\n<li>Redis가 동시에 여러 개의 명령을 처리할 수 있을까?</li>\n<li>참고로 단순한 get/set의 경우 초당 10만 TPS 이상 가능(CPU 속도에 영향을 받는다)</li>\n<li>Packet으로 하나의 Command가 완성되면 processCommand에서 실제로 실행됨</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"single-threaded의-의미\" style=\"position:relative;\"><a href=\"#single-threaded%EC%9D%98-%EC%9D%98%EB%AF%B8\" aria-label=\"single threaded의 의미 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Single Threaded의 의미</h2>\n<ul>\n<li>\n<p>한번에 하나의 명령만 수행 가능</p>\n<ul>\n<li>그럼 긴 시간이 필요한 명령을 수행하면?</li>\n<li>망합니다</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"대표적인-on-명령들\" style=\"position:relative;\"><a href=\"#%EB%8C%80%ED%91%9C%EC%A0%81%EC%9D%B8-on-%EB%AA%85%EB%A0%B9%EB%93%A4\" aria-label=\"대표적인 on 명령들 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>대표적인 O(N) 명령들</h2>\n<ul>\n<li>KEYS</li>\n<li>FLUSHALL, FLUSHDB</li>\n<li>Delete Collections</li>\n<li>Get All Collections</li>\n</ul>\n<h2 id=\"대표적인-실수-사례\" style=\"position:relative;\"><a href=\"#%EB%8C%80%ED%91%9C%EC%A0%81%EC%9D%B8-%EC%8B%A4%EC%88%98-%EC%82%AC%EB%A1%80\" aria-label=\"대표적인 실수 사례 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>대표적인 실수 사례</h2>\n<ul>\n<li>\n<p>Key가 백만개 이상인데 확인을 위해 KEYS 명령을 사용하는 경우</p>\n<ul>\n<li>모니터링 스크립트가 1초에 한번씩 KEYS를 호출하는 경우도..</li>\n</ul>\n</li>\n<li>아이템이 몇만개든 hash, sorted set, set에서 모든 데이터를 가져오는 경우</li>\n<li>예전에 Spring security oauth RedisTokenStore</li>\n</ul>\n<h2 id=\"keys는-어떻게-대체할-것인가\" style=\"position:relative;\"><a href=\"#keys%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8C%80%EC%B2%B4%ED%95%A0-%EA%B2%83%EC%9D%B8%EA%B0%80\" aria-label=\"keys는 어떻게 대체할 것인가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>KEYS는 어떻게 대체할 것인가?</h2>\n<ul>\n<li>scan 명령을 사용하는 것으로 하나의 긴 명령을 짧은 여러번의 명령으로 바꿀 수 있다</li>\n</ul>\n<h2 id=\"collection의-모든-item을-가져와야-할-때\" style=\"position:relative;\"><a href=\"#collection%EC%9D%98-%EB%AA%A8%EB%93%A0-item%EC%9D%84-%EA%B0%80%EC%A0%B8%EC%99%80%EC%95%BC-%ED%95%A0-%EB%95%8C\" aria-label=\"collection의 모든 item을 가져와야 할 때 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Collection의 모든 item을 가져와야 할 때?</h2>\n<ul>\n<li>\n<p>Collection의 일부만 가져오거나..</p>\n<ul>\n<li>Sorted Set</li>\n</ul>\n</li>\n<li>\n<p>큰 Collection을 작은 여러개의 Collection으로 나눠서 저장</p>\n<ul>\n<li>Userranks → Userrank1, 2, 3</li>\n<li>하나당 몇너개 안쪽으로 저장하는게 좋음</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"spring-security-oauth-redistokenstore-이슈\" style=\"position:relative;\"><a href=\"#spring-security-oauth-redistokenstore-%EC%9D%B4%EC%8A%88\" aria-label=\"spring security oauth redistokenstore 이슈 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Spring security oauth RedisTokenStore 이슈</h2>\n<ul>\n<li>\n<p>Access Token의 저장을 List(O(N)) 자료구조를 통해서 이루어짐</p>\n<ul>\n<li>\n<p>검색, 삭제시에 모든 item을 매번 찾아봐야 함</p>\n<ul>\n<li>100만개 쯤 되면 전체 성능에 영향을 줌</li>\n</ul>\n</li>\n<li>현재는 Set(O(1))을 이용해서 검색, 삭제를 하도록 수정되어 있음</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"redis-replication\" style=\"position:relative;\"><a href=\"#redis-replication\" aria-label=\"redis replication permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Redis Replication</h2>\n<ul>\n<li>\n<p>Async Replication</p>\n<ul>\n<li>\n<p>Replication Lag 발생할 수 있다</p>\n<ul>\n<li>틈 사이에 데이터가 다를 수 있다</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Replicaof (≥5.0.0) or slaveof 명령으로 설정 가능</p>\n<ul>\n<li>Replicaof hostname port</li>\n</ul>\n</li>\n<li>DBMS로 보면 statement replication가 유사</li>\n<li>\n<p>Replication 설정 과정</p>\n<ul>\n<li>Secondary에 replicaof or slaveof 명령을 전달</li>\n<li>Secondary는 Primary에 sync 명령 전달</li>\n<li>\n<p>Primary는 현재 메모리 상태를 저장하기 위해</p>\n<ul>\n<li>Fork</li>\n</ul>\n</li>\n<li>Fork한 프로세서는 현재 메모리 정보를 disk에 dump</li>\n<li>해당 정보를 secondary에 전달</li>\n<li>Fork 이후의 데이터를 secondary에 계속 전달</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"redis-replication-시-주의할-점\" style=\"position:relative;\"><a href=\"#redis-replication-%EC%8B%9C-%EC%A3%BC%EC%9D%98%ED%95%A0-%EC%A0%90\" aria-label=\"redis replication 시 주의할 점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Redis Replication 시 주의할 점</h2>\n<ul>\n<li>Replication 과정에서 fork가 발생하므로 메모리 부족이 발생할 수 있음</li>\n<li>Redis-cli —rdb 명령은 현재 상태의 메모리 스냅샷을 가져오므로 같은 문제를 발생시킴</li>\n<li>AWS나 클라우드의 Redis는 좀 다르게 구현되어서 좀 더 해당 부분이 안정적</li>\n<li>\n<p>많은 대수의 Redis 서버가 Replica를 두고 있다면</p>\n<ul>\n<li>네트웍 이슈나, 사람의 작업으로 동시에 replication이 재시도 되도록 하면 문제가 발생할 수 있음</li>\n<li>ex) 같은 네트웍 안에서 30GB를 쓰면 Redis Master 100대 정도가 리플리케이션을 동시에 재시작하면 어떤 일이 벌어질 수 있을까?</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"redisconf-권장-설정-tip\" style=\"position:relative;\"><a href=\"#redisconf-%EA%B6%8C%EC%9E%A5-%EC%84%A4%EC%A0%95-tip\" aria-label=\"redisconf 권장 설정 tip permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>redis.conf 권장 설정 Tip</h2>\n<ul>\n<li>Maxclient 설정 50000</li>\n<li>RDB/AOF 설정 off</li>\n<li>\n<p>특정 commands disable</p>\n<ul>\n<li>Keys</li>\n<li>AWS의 ElasticCache는 이미 하고 있음</li>\n</ul>\n</li>\n<li>전체 장애의 90% 이상이 KEYS와 SAVE 설정을 사용해서 발생</li>\n<li>적절한 ziplist 설정</li>\n</ul>\n<h2 id=\"redis-데이터-분산\" style=\"position:relative;\"><a href=\"#redis-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B6%84%EC%82%B0\" aria-label=\"redis 데이터 분산 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Redis 데이터 분산</h2>\n<ul>\n<li>\n<p>데이터의 특성에 따라서 선택할 수 있는 방법이 달라진다</p>\n<ul>\n<li>Cache 일때는 우아한 Reids</li>\n<li>\n<p>Persistent 해야하면 안 우아한 Reids</p>\n<ul>\n<li>Open the hellgate</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"데이터-분산-방법\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B6%84%EC%82%B0-%EB%B0%A9%EB%B2%95\" aria-label=\"데이터 분산 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터 분산 방법</h2>\n<ul>\n<li>\n<p>Application</p>\n<ul>\n<li>\n<p>Consistent Hashing</p>\n<ul>\n<li>twemproxy를 사용하는 방법으로 쉽게 사용 가능</li>\n</ul>\n</li>\n<li>Sharding</li>\n</ul>\n</li>\n<li>Redis Cluster</li>\n</ul>\n<h2 id=\"sharding\" style=\"position:relative;\"><a href=\"#sharding\" aria-label=\"sharding permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Sharding</h2>\n<ul>\n<li>데이터를 어떻게 나눌것인가?</li>\n<li>데이터를 어떻게 찾을것인가?</li>\n<li>하나의 데이터를 모든 서버에서 찾아야 하면?</li>\n<li>상황마다 샤딩 전략이 달라짐</li>\n</ul>\n<h2 id=\"range\" style=\"position:relative;\"><a href=\"#range\" aria-label=\"range permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Range</h2>\n<ul>\n<li>그냥 특정 Range를 정의하고 해당 Range에 속하면 거기에 저장</li>\n</ul>\n<h2 id=\"indexed\" style=\"position:relative;\"><a href=\"#indexed\" aria-label=\"indexed permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Indexed</h2>\n<ul>\n<li>해당 Key가 어디에 저장되어야 할 관리 서버가 따로 존재</li>\n</ul>\n<h2 id=\"monitoring-factor\" style=\"position:relative;\"><a href=\"#monitoring-factor\" aria-label=\"monitoring factor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Monitoring Factor</h2>\n<ul>\n<li>\n<p>Reids Info를 통한 정보</p>\n<ul>\n<li>RSS</li>\n<li>Used Memory</li>\n<li>Connection 수</li>\n<li>초당 처리 요청 수</li>\n</ul>\n</li>\n<li>\n<p>System</p>\n<ul>\n<li>CPU</li>\n<li>Disk</li>\n<li>Network rx/tx</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"cpu가-100를-칠-경우\" style=\"position:relative;\"><a href=\"#cpu%EA%B0%80-100%EB%A5%BC-%EC%B9%A0-%EA%B2%BD%EC%9A%B0\" aria-label=\"cpu가 100를 칠 경우 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CPU가 100%를 칠 경우</h2>\n<ul>\n<li>\n<p>처리량이 매우 많다면?</p>\n<ul>\n<li>좀 더 CPU 성능이 좋은 서버로 이전</li>\n<li>\n<p>실제 CPU 성능에 영향을 받음</p>\n<ul>\n<li>그러나 단순 get/set은 초당 10만 이상 처리가능</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>O(N) 계열의 특정 명령이 많은 경우</p>\n<ul>\n<li>Monitor 명령을 통해 특정 패턴을 파악하는 것이 필요</li>\n<li>Monitor 잘못쓰면 부하로 해당 서버에 더 큰 문제를 일으킬 수도 있음(짧게 쓰는게 좋음)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"결론\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EB%A1%A0\" aria-label=\"결론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결론</h2>\n<ul>\n<li>기본적으로 Redis는 매우 좋은 툴</li>\n<li>\n<p>그러나 메모리를 빡빡하게 쓸 경우, 관리하기가 어려움</p>\n<ul>\n<li>32기가 장비라면 24기가 이상 사용하면 장비 증설을 고려하는 것이 좋음</li>\n<li>write가 heavy할 때는 migration도 매우 주의해야함</li>\n</ul>\n</li>\n<li>Client-output-buffer-limit 설정이 필요</li>\n</ul>\n<h2 id=\"redis-as-cache\" style=\"position:relative;\"><a href=\"#redis-as-cache\" aria-label=\"redis as cache permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Redis as Cache</h2>\n<ul>\n<li>\n<p>Cahce일 경우는 문제가 적게 발생</p>\n<ul>\n<li>Redis가 문제가 있을 때 DB등의 부하가 어느정도 증가하는 지 확인 필요</li>\n<li>Consistent Hashing도 실제 부하를 아주 균등하게 나누지는 않음. Adaptive Consistent Hashing을 이용해 볼 수도 있음.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"redis-as-persistent-store\" style=\"position:relative;\"><a href=\"#redis-as-persistent-store\" aria-label=\"redis as persistent store permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Redis as Persistent Store</h2>\n<ul>\n<li>\n<p>Persistent Store의 경우</p>\n<ul>\n<li>무조건 Primary/Secondary 구조로 구성이 필요함</li>\n<li>\n<p>메모리를 절대로 빡빡하게 사용하면 안됨.</p>\n<ul>\n<li>정기적인 migration이 필요</li>\n<li>가능하면 자동화 툴을 만들어서 이용</li>\n</ul>\n</li>\n<li>RDB/AOF가 필요하다면 Secondary에서만 구동</li>\n</ul>\n</li>\n<li>\n<p>답이 별로 없다.</p>\n<ul>\n<li>최대한 돈을 많이 투자.</li>\n<li>메모리 덜 쓰고</li>\n<li>자주 체크해주고</li>\n</ul>\n</li>\n</ul>","excerpt":"Cache 구조 #1 - Look aside Cache #2 - Write Back Redis는 Collection을 제공 왜 Collection이 중요한가? 개발의 편의성 랭킹 서버를 직접 구현한다면? 가장 간단한 방법 DB에 유저의 Score를 …","tableOfContents":"<ul>\n<li>\n<ul>\n<li><a href=\"/woowa-redis/#cache-%EA%B5%AC%EC%A1%B0\">Cache 구조</a></li>\n<li><a href=\"/woowa-redis/#1---look-aside-cache\">#1 - Look aside Cache</a></li>\n<li><a href=\"/woowa-redis/#2---write-back\">#2 - Write Back</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/woowa-redis/#%EC%99%9C-collection%EC%9D%B4-%EC%A4%91%EC%9A%94%ED%95%9C%EA%B0%80\">왜 Collection이 중요한가?</a></p>\n<ul>\n<li><a href=\"/woowa-redis/#%EA%B0%9C%EB%B0%9C%EC%9D%98-%ED%8E%B8%EC%9D%98%EC%84%B1\">개발의 편의성</a></li>\n<li><a href=\"/woowa-redis/#%EA%B0%9C%EB%B0%9C%EC%9D%98-%EB%82%9C%EC%9D%B4%EB%8F%84\">개발의 난이도</a></li>\n</ul>\n</li>\n<li><a href=\"/woowa-redis/#redis-%EC%82%AC%EC%9A%A9-%EC%B2%98\">Redis 사용 처</a></li>\n<li><a href=\"/woowa-redis/#redis-collections\">Redis Collections</a></li>\n<li><a href=\"/woowa-redis/#collection-%EC%A3%BC%EC%9D%98-%EC%82%AC%ED%95%AD\">Collection 주의 사항</a></li>\n<li><a href=\"/woowa-redis/#redis-%EC%9A%B4%EC%98%81\">Redis 운영</a></li>\n<li><a href=\"/woowa-redis/#%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B4%80%EB%A6%AC\">메모리 관리</a></li>\n<li><a href=\"/woowa-redis/#%EB%A9%94%EB%AA%A8%EB%A6%AC%EA%B0%80-%EB%B6%80%EC%A1%B1%ED%95%A0-%EB%95%8C%EB%8A%94\">메모리가 부족할 때는?</a></li>\n<li><a href=\"/woowa-redis/#%EB%A9%94%EB%AA%A8%EB%A6%AC%EB%A5%BC-%EC%A4%84%EC%9D%B4%EA%B8%B0-%EC%9C%84%ED%95%9C-%EC%84%A4%EC%A0%95\">메모리를 줄이기 위한 설정</a></li>\n<li><a href=\"/woowa-redis/#ziplist-%EA%B5%AC%EC%A1%B0\">Ziplist 구조</a></li>\n<li><a href=\"/woowa-redis/#on-%EA%B4%80%EB%A0%A8-%EB%AA%85%EB%A0%B9%EC%96%B4%EB%8A%94-%EC%A3%BC%EC%9D%98%ED%95%98%EC%9E%90\">O(N) 관련 명령어는 주의하자</a></li>\n<li><a href=\"/woowa-redis/#single-threaded%EC%9D%98-%EC%9D%98%EB%AF%B8\">Single Threaded의 의미</a></li>\n<li><a href=\"/woowa-redis/#%EB%8C%80%ED%91%9C%EC%A0%81%EC%9D%B8-on-%EB%AA%85%EB%A0%B9%EB%93%A4\">대표적인 O(N) 명령들</a></li>\n<li><a href=\"/woowa-redis/#%EB%8C%80%ED%91%9C%EC%A0%81%EC%9D%B8-%EC%8B%A4%EC%88%98-%EC%82%AC%EB%A1%80\">대표적인 실수 사례</a></li>\n<li><a href=\"/woowa-redis/#keys%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8C%80%EC%B2%B4%ED%95%A0-%EA%B2%83%EC%9D%B8%EA%B0%80\">KEYS는 어떻게 대체할 것인가?</a></li>\n<li><a href=\"/woowa-redis/#collection%EC%9D%98-%EB%AA%A8%EB%93%A0-item%EC%9D%84-%EA%B0%80%EC%A0%B8%EC%99%80%EC%95%BC-%ED%95%A0-%EB%95%8C\">Collection의 모든 item을 가져와야 할 때?</a></li>\n<li><a href=\"/woowa-redis/#spring-security-oauth-redistokenstore-%EC%9D%B4%EC%8A%88\">Spring security oauth RedisTokenStore 이슈</a></li>\n<li><a href=\"/woowa-redis/#redis-replication\">Redis Replication</a></li>\n<li><a href=\"/woowa-redis/#redis-replication-%EC%8B%9C-%EC%A3%BC%EC%9D%98%ED%95%A0-%EC%A0%90\">Redis Replication 시 주의할 점</a></li>\n<li><a href=\"/woowa-redis/#redisconf-%EA%B6%8C%EC%9E%A5-%EC%84%A4%EC%A0%95-tip\">redis.conf 권장 설정 Tip</a></li>\n<li><a href=\"/woowa-redis/#redis-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B6%84%EC%82%B0\">Redis 데이터 분산</a></li>\n<li><a href=\"/woowa-redis/#%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B6%84%EC%82%B0-%EB%B0%A9%EB%B2%95\">데이터 분산 방법</a></li>\n<li><a href=\"/woowa-redis/#sharding\">Sharding</a></li>\n<li><a href=\"/woowa-redis/#range\">Range</a></li>\n<li><a href=\"/woowa-redis/#indexed\">Indexed</a></li>\n<li><a href=\"/woowa-redis/#monitoring-factor\">Monitoring Factor</a></li>\n<li><a href=\"/woowa-redis/#cpu%EA%B0%80-100%EB%A5%BC-%EC%B9%A0-%EA%B2%BD%EC%9A%B0\">CPU가 100%를 칠 경우</a></li>\n<li><a href=\"/woowa-redis/#%EA%B2%B0%EB%A1%A0\">결론</a></li>\n<li><a href=\"/woowa-redis/#redis-as-cache\">Redis as Cache</a></li>\n<li><a href=\"/woowa-redis/#redis-as-persistent-store\">Redis as Persistent Store</a></li>\n</ul>","fields":{"slug":"/woowa-redis/"},"frontmatter":{"title":"우아한레디스를 보고 정리","date":"Dec 18, 2021","tags":["redis"],"keywords":["Dev.Oh","JooHyung Oh"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/woowa-redis/","series":[],"lastmod":"2021-12-18"}},"staticQueryHashes":["2027115977","694178885"]}