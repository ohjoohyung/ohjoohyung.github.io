{"componentChunkName":"component---src-templates-post-tsx","path":"/cross-join/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"cross-join\" style=\"position:relative;\"><a href=\"#cross-join\" aria-label=\"cross join permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cross Join?</h2>\n<ul>\n<li>JPA 빌더인 QueryDSL을 사용하다보면 Join 쿼리 작성할 때 주의하지 않으면 Cross Join이 발생한다고 한다.</li>\n<li>예전에 이동욱님 글에서 한번 본 적이 있었는데 당시에는 QueryDSL을 사용하고 있지 않던 터라 그냥 넘어갔던 기억이 있다.</li>\n<li>이번에 이렇게 Cross Join 문제를 겪고 나서야 해결한 뒤 정신차리고 글을 작성한다.</li>\n</ul>\n<p>Cross Join (교차 조인) 은 카디션 곱이라고도 하며 조인되는 두 테이블에서 곱집합을 반환한다.</p>\n<p>이 말은 집합에서 나올 수 있는 모든 경우를 이야기 한다.</p>\n<p>예로 들면 A 집합 {a, b, c}, B 집합 {1, 2, 3, 4} 가 있고 두 집합이 Cross Join이 된다면 A x B로 다음과 같이 총 12개의 집합이 나오게 된다.\n{a, 1}, {a, 2}, {a, 3}, {a, 4}, {b, 1} .... {c, 4}</p>\n<p>그러다보니 일반적인 Join 보다 성능상 이슈가 발생하게 된다.</p>\n<br/>\n<h2 id=\"문제-상황\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%83%81%ED%99%A9\" aria-label=\"문제 상황 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 상황</h2>\n<ul>\n<li>그렇다면 우리 프로젝트에서는 어떤 상황에서 발생했을까?</li>\n<li>기존의 검색 기능은 문제집을 검색했을 때 문제집 이름에 포함이 되는 결과를 보여주었다.</li>\n<li>그런데 태그 이름이 일치하는 문제집도 보여주자는 의견이 나왔고 현재 프로젝트 특성 상 그게 논리적으로도 맞다고 봐 이에 맞춰 기능을 추가하기로 했다.</li>\n<li>검색에 쓰이는 동적 쿼리는 QueryDSL을 통해 만들어주고 있었고 기존의 코드는 다음과 같다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">Page</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Workbook</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">searchAll</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WorkbookSearchParameter</span> parameter<span class=\"token punctuation\">,</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Long</span><span class=\"token punctuation\">></span></span> tags<span class=\"token punctuation\">,</span>\n                                    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Long</span><span class=\"token punctuation\">></span></span> users<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Pageable</span> pageable<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">QueryResults</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Workbook</span><span class=\"token punctuation\">></span></span> results <span class=\"token operator\">=</span> jpaQueryFactory<span class=\"token punctuation\">.</span><span class=\"token function\">selectFrom</span><span class=\"token punctuation\">(</span>workbook<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">innerJoin</span><span class=\"token punctuation\">(</span>workbook<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">fetchJoin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">innerJoin</span><span class=\"token punctuation\">(</span>workbook<span class=\"token punctuation\">.</span>cards<span class=\"token punctuation\">.</span>cards<span class=\"token punctuation\">,</span> card<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">leftJoin</span><span class=\"token punctuation\">(</span>workbook<span class=\"token punctuation\">.</span>workbookTags<span class=\"token punctuation\">,</span> workbookTag<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">leftJoin</span><span class=\"token punctuation\">(</span>workbook<span class=\"token punctuation\">.</span>hearts<span class=\"token punctuation\">.</span>hearts<span class=\"token punctuation\">,</span> heart<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token function\">containKeyword</span><span class=\"token punctuation\">(</span>parameter<span class=\"token punctuation\">.</span><span class=\"token function\">getSearchKeyword</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token function\">containTags</span><span class=\"token punctuation\">(</span>tags<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token function\">containUsers</span><span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token function\">openedTrue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">groupBy</span><span class=\"token punctuation\">(</span>workbook<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">orderBy</span><span class=\"token punctuation\">(</span><span class=\"token function\">findCriteria</span><span class=\"token punctuation\">(</span>parameter<span class=\"token punctuation\">.</span><span class=\"token function\">getSearchCriteria</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> workbook<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">.</span><span class=\"token function\">asc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">offset</span><span class=\"token punctuation\">(</span>pageable<span class=\"token punctuation\">.</span><span class=\"token function\">getOffset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">limit</span><span class=\"token punctuation\">(</span>pageable<span class=\"token punctuation\">.</span><span class=\"token function\">getPageSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">fetchResults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PageImpl</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">.</span><span class=\"token function\">getResults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pageable<span class=\"token punctuation\">,</span> results<span class=\"token punctuation\">.</span><span class=\"token function\">getTotal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">BooleanExpression</span> <span class=\"token function\">containKeyword</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SearchKeyword</span> searchKeyword<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>searchKeyword <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token class-name\">String</span> keyword <span class=\"token operator\">=</span> searchKeyword<span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> workbook\n\t\t\t\t\t\t\t\t\t<span class=\"token punctuation\">.</span>name\n\t\t\t\t\t\t\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">lower</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>keyword<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>containKeyword 부분이 현재 문제집 이름에 포함이 되는 값만 조회하도록 되어있었고 여기에 태그 이름이 일치하는 경우도 추가하기로 했다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"> <span class=\"token keyword\">private</span> <span class=\"token class-name\">BooleanExpression</span> <span class=\"token function\">containKeyword</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SearchKeyword</span> searchKeyword<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>searchKeyword <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token class-name\">String</span> keyword <span class=\"token operator\">=</span> searchKeyword<span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">containsKeywordInWorkbookName</span><span class=\"token punctuation\">(</span>keyword<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">or</span><span class=\"token punctuation\">(</span><span class=\"token function\">containsKeywordInWorkbookTag</span><span class=\"token punctuation\">(</span>keyword<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">BooleanExpression</span> <span class=\"token function\">containsKeywordInWorkbookName</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> keyword<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> workbook<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span><span class=\"token function\">lower</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>keyword<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">BooleanExpression</span> <span class=\"token function\">containsKeywordInWorkbookTag</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> keyword<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">StringPath</span> tagName <span class=\"token operator\">=</span> workbookTag<span class=\"token punctuation\">.</span>tag<span class=\"token punctuation\">.</span>tagName<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> tagName<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span>keyword<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>지금보니 메서드 이름을 수정하거나 코드 포맷팅을 해줘야 할거같다..</li>\n<li>아무튼 이런 식으로 or을 사용해서 가져오도록 했고</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/62014888/145753361-17a52122-7dd3-452e-86d3-09c1afaf4145.png\" alt=\"Untitled (19)\"></p>\n<ul>\n<li>실제로도 원하는 위치에 or가 있어서 잘 가져오는 줄 알았는데 테스트 코드에서 실패했다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n<span class=\"token annotation punctuation\">@DisplayName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"검색어를 입력하고 좋아요순으로 정렬한다. 좋아요가 같다면 id순으로 정렬한다.\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">searchAllFromKeywordAndHeartDesc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// given</span>\n    <span class=\"token class-name\">WorkbookSearchParameter</span> parameter <span class=\"token operator\">=</span> <span class=\"token class-name\">WorkbookSearchParameter</span><span class=\"token punctuation\">.</span><span class=\"token function\">builder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">searchKeyword</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"문제\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">searchCriteria</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"heart\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// when</span>\n    <span class=\"token class-name\">Page</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Workbook</span><span class=\"token punctuation\">></span></span> workbooks <span class=\"token operator\">=</span> workbookSearchRepository<span class=\"token punctuation\">.</span><span class=\"token function\">searchAll</span><span class=\"token punctuation\">(</span>parameter<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> parameter<span class=\"token punctuation\">.</span><span class=\"token function\">toPageRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Workbook</span><span class=\"token punctuation\">></span></span> workbookList <span class=\"token operator\">=</span> workbooks<span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">// then</span>\n    <span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>workbookList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">hasSize</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>workbookList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">extracting</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Workbook</span><span class=\"token operator\">::</span><span class=\"token function\">getName</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">containsExactly</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"좋아요가 많아 문제다.\"</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">\"Java 문제집0\"</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">\"Javascript 문제집0\"</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">\"Java 문제집1\"</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">\"Javascript 문제집1\"</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">\"Java 문제집2\"</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">\"Javascript 문제집2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><img src=\"https://user-images.githubusercontent.com/62014888/145753391-420df9f4-5d75-4f91-a11b-2c30e5f86d46.png\" alt=\"Untitled (20)\"></p>\n<ul>\n<li>7개를 가져와야 하는데 6개 밖에 가져오지 못했고 이것저것 실험해보니 태그가 포함되지 않은 문제집이 조회가 되지 않는다는 것을 알게 되었다.</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/62014888/145753398-c02cc4e8-5111-4618-acb9-70c64e12b5ad.png\" alt=\"Untitled (21)\"></p>\n<ul>\n<li>또한 그 위를 보니 이런식으로 tag가 Cross Join이 되어있는 것을 발견했다.</li>\n<li>현재 Workbook과 Tag 사이의 중간 테이블인 WorkbookTag는 Left Outer Join이 되어있는데 Tag는 아무런 Join이 되어있지 않았다.</li>\n<li>즉, 연관관계를 맺고 있지만 Join이 되어있지 않은 상태에서 접근하려고 하니 JPA가 자동으로 Cross Join을 해주었고 이런 결과를 보여주게 된 것이다.</li>\n</ul>\n<br/>\n<h2 id=\"해결\" style=\"position:relative;\"><a href=\"#%ED%95%B4%EA%B2%B0\" aria-label=\"해결 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>해결</h2>\n<ul>\n<li>이동욱님의 글에서 적혀있듯이 암묵적으로 Join이 된 것을 명시적으로 해주면 된다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">Page</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Workbook</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">searchAll</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WorkbookSearchParameter</span> parameter<span class=\"token punctuation\">,</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Long</span><span class=\"token punctuation\">></span></span> tags<span class=\"token punctuation\">,</span>\n                                    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Long</span><span class=\"token punctuation\">></span></span> users<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Pageable</span> pageable<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">QueryResults</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Workbook</span><span class=\"token punctuation\">></span></span> results <span class=\"token operator\">=</span> jpaQueryFactory<span class=\"token punctuation\">.</span><span class=\"token function\">selectFrom</span><span class=\"token punctuation\">(</span>workbook<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">innerJoin</span><span class=\"token punctuation\">(</span>workbook<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">fetchJoin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">innerJoin</span><span class=\"token punctuation\">(</span>workbook<span class=\"token punctuation\">.</span>cards<span class=\"token punctuation\">.</span>cards<span class=\"token punctuation\">,</span> card<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">leftJoin</span><span class=\"token punctuation\">(</span>workbook<span class=\"token punctuation\">.</span>workbookTags<span class=\"token punctuation\">,</span> workbookTag<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">leftJoin</span><span class=\"token punctuation\">(</span>workbookTag<span class=\"token punctuation\">.</span>tag<span class=\"token punctuation\">,</span> tag<span class=\"token punctuation\">)</span> <span class=\"token comment\">// leftJoin을 추가했다.</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">leftJoin</span><span class=\"token punctuation\">(</span>workbook<span class=\"token punctuation\">.</span>hearts<span class=\"token punctuation\">.</span>hearts<span class=\"token punctuation\">,</span> heart<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token function\">containKeyword</span><span class=\"token punctuation\">(</span>parameter<span class=\"token punctuation\">.</span><span class=\"token function\">getSearchKeyword</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token function\">containTags</span><span class=\"token punctuation\">(</span>tags<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token function\">containUsers</span><span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token function\">openedTrue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">groupBy</span><span class=\"token punctuation\">(</span>workbook<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">orderBy</span><span class=\"token punctuation\">(</span><span class=\"token function\">findCriteria</span><span class=\"token punctuation\">(</span>parameter<span class=\"token punctuation\">.</span><span class=\"token function\">getSearchCriteria</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> workbook<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">.</span><span class=\"token function\">asc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">offset</span><span class=\"token punctuation\">(</span>pageable<span class=\"token punctuation\">.</span><span class=\"token function\">getOffset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">limit</span><span class=\"token punctuation\">(</span>pageable<span class=\"token punctuation\">.</span><span class=\"token function\">getPageSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">fetchResults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PageImpl</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">.</span><span class=\"token function\">getResults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pageable<span class=\"token punctuation\">,</span> results<span class=\"token punctuation\">.</span><span class=\"token function\">getTotal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>참고로 Inner Join으로 하여도 Cross Join과 같은 결과를 받았다.</li>\n<li>그럼 왜 Inner Join, Cross Join을 사용하면 태그가 없는 문제집을 들고오질 않을까?</li>\n<li>\n<p>간단하게 그림으로 보자.</p>\n<p><img src=\"https://user-images.githubusercontent.com/62014888/145753448-87e9b1e8-b999-4ead-9720-498000750d83.png\" alt=\"Untitled (22)\"></p>\n</li>\n<li>발그림이긴 한데 간단하게 요약하면 Workbook과 WorkbookTag가 이미 Left Outer Join이 되어있는 시점에서 WorkbookTag와 Tag를 Inner Join이나 Cross Join을 하려고 하니 태그가 존재하지 않는 문제집은 아예 가져오질 못하는 것이다.</li>\n<li>나는 Workbook과 WorkbookTag가 이미 Left Outer Join이 되어있는 시점에서 WorkbookTag와 Tag가 Inner Join이 되어도 괜찮지 않을까 생각했는데 잘못되었다는 것을 그림을 통해 알 수 있었다.</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/62014888/145753556-587f276a-8f8d-4cca-b584-ef8536420a71.png\" alt=\"Untitled (23)\"></p>\n<p><img src=\"https://user-images.githubusercontent.com/62014888/145753559-df10dbb0-9abd-449f-aa54-173d4383c1ca.png\" alt=\"Untitled (24)\"></p>\n<ul>\n<li>결과적으로 원하는 쿼리문이 나왔고 테스트를 통과하는 모습을 볼 수 있었다.</li>\n</ul>\n<br/>\n<h2 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h2>\n<ul>\n<li>\n<p>JPA를 사용하는데 특히 QueryDSL을 사용한다면 Cross Join을 조심하자.</p>\n<ul>\n<li>모든 집합을 가져오다보니 원하지 않는 값까지 들고 올 수도 있다.</li>\n</ul>\n</li>\n<li>의도하여 Cross Join을 하지 않는 이상 암묵적 Join은 모두 명시적 Join으로 바꾸도록 하자!</li>\n</ul>\n<br/>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://jojoldu.tistory.com/533\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://jojoldu.tistory.com/533</a></li>\n<li><a href=\"https://clairdelunes.tistory.com/22\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://clairdelunes.tistory.com/22</a></li>\n</ul>","excerpt":"Cross Join? JPA 빌더인 QueryDSL을 사용하다보면 Join 쿼리 작성할 때 주의하지 않으면 Cross Join이 발생한다고 한다. 예전에 이동욱님 글에서 한번 본 적이 있었는데 당시에는 QueryDSL을 사용하고 있지 않던 터라 그냥…","tableOfContents":"<ul>\n<li><a href=\"/cross-join/#cross-join\">Cross Join?</a></li>\n<li><a href=\"/cross-join/#%EB%AC%B8%EC%A0%9C-%EC%83%81%ED%99%A9\">문제 상황</a></li>\n<li><a href=\"/cross-join/#%ED%95%B4%EA%B2%B0\">해결</a></li>\n<li><a href=\"/cross-join/#%EB%A7%88%EB%AC%B4%EB%A6%AC\">마무리</a></li>\n<li><a href=\"/cross-join/#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>","fields":{"slug":"/cross-join/"},"frontmatter":{"title":"Cross Join 살펴보기","date":"Sep 30, 2021","tags":["database","join"],"keywords":["Dev.Oh","JooHyung Oh"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/cross-join/","series":[],"lastmod":"2021-09-30"}},"staticQueryHashes":["2027115977","694178885"]}